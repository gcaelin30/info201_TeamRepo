1+3
?cat
cat("Hello World")
cat("Hello World\n")
getwd()
setwd("..")
getwd()
list.files()
setwd()
setwd("gcaelin")
getwd()
3^2
x <- 6
x
movie <- "la la land"
movie
durationMin <- 110
durationHrs <- durationMin/60
durationHrs
ILikeCoffee <- TRUE
ILikeCoffee
distance <- 100
far <- distance >50
far
cat"is it far?", far, "\n"
cat ("duratin in minds:", durationMins/60 "\n")
cat ("duration in minds:", durationMins/60, "\n")
cat ("duration in mins:", durationMins/60, "\n")
far <- distance > 50
cat ("duration in mins:", durationMin/60, "\n")
cat ("is it far?", far, "\n")
c <- 300000
format(c, scientific=TRUE)
getwd()
setwd("..")
getwd()
setwd("/users/gcaelin")
getwd()
library(tb <- tibble(a=[1:4], b=letters[1:4]))
library(tb <- tibble(a=1:4, b=letters[1:4]))
install.package(data.table)
install.packages(data.table)
library()
tb <- tibble(a=1:4, b=letters[1:4])
install.packages("dplyr")  # once per machine
library("dplyr")
head(filter(babynames, year === 1998))
head(filter(babynames, year == 1998))
library(babynames)
head(filter(babynames, year == 1998))
a <- filter(babynames, year == 1998, sex == "M")
head(a)
filter(a, min_rank(desc(n)) == 1)
remove.packages("dplyr")
base <- "https://api.github.com"
org <- "info-201-au2018"
org <- "info201-au2018"
uri <- paste(base, "orgs", org, sep="/")
uri
header <- add_headers(Accept = "application/vnd.github.v3+json")
header <- add_headers(Accept = "application/vnd.github.v3+json")
library(httr)
header <- add_headers(Accept = "application/vnd.github.v3+json")
res <- httr::GET(uri, header)
res
base <- "https://api.github.com"
org <- "info201-au2018"
# can easily switch b/w repos
uri <-
paste0
(base, "/orgs/", org)
header <-
add_headers
(Accept = "application/vnd.github.v3+json")
res <- httr
::GET
(uri, header)
base <- "https://api.github.com"
org <- "info201-au2018"
uri <-
paste0
(base, "/orgs/", org)
uri <-
paste(base, "/orgs/", org)
header <-
add_headers
(Accept = "application/vnd.github.v3+json")
res <- httr
::GET
(uri, header)
res <- httr::GET(uri, header)
res <- httr::GET(uri, header)
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste(base, "/orgs/, org")
header <- add_headers(Accept = "applications/vnd.github.v3+json")
res <- httr::GET(uri,header)
uri <- paste(base, "/orgs/", org)
res <- httr::GET(uri,header)
> base <- "https://api.github.com"
> org <- "info201-au2018"
> uri <- paste(base, "/orgs/", org, sep = "/")
> header <- add_headers(Accept = "applications/vnd.github.v3+json")
> res <- httr::GET(uri,header)
res <- httr::GET(uri,header)
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste(base, "/orgs/", org, sep = "/")
header <- add_headers(Accept = "applications/vnd.github.v3+json")
res <- httr::GET(uri,header)
res
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste(base, "orgs", org, sep = "/")
header <- add_headers(Accept = "applications/vnd.github.v3+json")
res <- httr::GET(uri,header)
res
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste(base, "orgs", org, sep = "/")
header <- add_headers(Accept = "applications/vnd.github.v3+json")
res <- httr::GET(uri,header)
res
res
res
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste(base, "/orgs/", org, sep = "/")
header <- add_headers(Accept = "applications/vnd.github.v3+json")
res <- httr::GET(uri,header)
res
base <- "https://api.github.com"
org <- "info201-au2018"
uri <- paste(base, "orgs", org, sep = "/")
header <- add_headers(Accept = "applications/vnd.github.v3+json")
res <- httr::GET(uri,header)
res
http_status(res)
httr::content(res, "text")
library(jsonlite)
httr::content(res, "text")
https://api.github.com/orgs/info201-au2018
uri
httr::content(res, "text") %>% cat ()
httr::content(res, "text") %>% cat()
library(dplyr)
httr::content(res, "text") %>% cat()
data <- content(res, "text") %>%
fromJSON()
data
data$description
shiny::runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
runApp('INFO201/noisy-app')
server <- function(input, output) {
output$message <- renderText({
input$txt
})
output$uwelev <- renderPlot({
ggplot(data, aes(lon, lat, fill=elevation)) +
geom_tile() +
scale_fill_gradient(low=input$low, high="white") +
coord_quickmap()
})
}
server <- function(input, output) {
output$uwelev <- renderPlot({
ggplot(data, aes(lon, lat, fill=elevation)) +
geom_tile() +
scale_fill_gradient(low=input$low, high="white") +
coord_quickmap()
})
}
library(shiny)
library(ggplot2)
getwd()
setwd("~/INFO201/info201_TeamRepo/crimeRate")
getwd()
shiny::runApp()
filtered_crime <- filter_dates("Crime_data.csv")
sex_crimes <- filter(filtered_crime, Crime.Subcategory == "AGGRAVATED ASSAULT" |
Crime.Subcategory == "AGGRAVATED ASSAULT-DV" |
Crime.Subcategory == "PORNOGRAPHY" |
Crime.Subcategory =="PROSTITUTION" |
Crime.Subcategory == "RAPE" |
Crime.Subcategory =="SEX OFFENSE-OTHER")
View(filter_dates)
View(filter_dates)
View(filter_dates)
View(filter_dates)
agg_assult <-  length(which(sex_crimes$Crime.Subcategory == "AGGRAVATED ASSAULT"))
runApp()
library(plyr)
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(plyr)
runApp()
runApp()
runApp()
runApp()
if(input$crime == 'Aggravated Assault'){
#I apologize for the bad variable names, I ran out of things to think of with 'crime'
bad_crimes <-  count(sex_crimes, c( "Year.Occured", "Crime.Subcategory"))
} else if(input$crime == 'Domestic Violence'){
bad_crimes <-  count(sex_crimes, c( "Year.Occured", "Crime.Subcategory"))
runApp()
runApp()
runApp()
runApp()
q()
exit
)
runApp()
if(input$crime == 'Aggravated Assault'){
#I apologize for the bad variable names, I ran out of things to think of with 'crime'
bad_crimes <-  count(sex_crimes, c( "Year.Occurred", "Crime.Subcategory"))
}
runApp()
if(input$crime == 'Aggravated Assault'){
#I apologize for the bad variable names, I ran out of things to think of with 'crime'
bad_crimes <-  count(sex_crimes, c( "Year.Occurred", "Crime.Subcategory"))
runApp()
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(sex_crimes)
runApp()
tail(sex_crimes)
runApp()
sex_crimes <- filter(filtered_crime, Crime.Subcategory == "AGGRAVATED ASSAULT" |
Crime.Subcategory == "AGGRAVATED ASSAULT-DV" |
Crime.Subcategory == "PORNOGRAPHY" |
Crime.Subcategory =="PROSTITUTION" |
Crime.Subcategory == "RAPE" |
Crime.Subcategory =="SEX OFFENSE-OTHER") %>%
group_by(Year.Occurred)
View(sex_crimes)
runApp()
